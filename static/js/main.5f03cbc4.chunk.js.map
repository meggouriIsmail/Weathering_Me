{"version":3,"sources":["HourlyForcast.js","MoreInfo.js","WeatherComponent.js","searchIcon.svg","Form.js","App.js","index.js"],"names":["HourlyForcast","props","Info","map","item","index","date","Date","dt","className","getMonth","getDate","getHours","getMinutes","src","weather","icon","alt","parseInt","temp","MoreInfo","sunrise","sunset","wind","sys","main","timezone","options","timeZone","hour","minute","second","hour12","toLocaleTimeString","country","pressure","speed","substring","length","feels_like","humidity","d","months","days","Section","cityCountry","description","iconPic","getDay","Math","floor","coords","coord","style","paddingLeft","Error","Form","error","onSubmit","loadWeather","type","logo","width","placeholder","name","URI","PARAMS","API_KEY","process","App","getWeather","e","a","preventDefault","target","animation","city","elements","value","fetch","apiCall","json","response","sec","document","querySelector","cod","classList","contains","remove","add","console","log","setState","temp_max","temp_min","state","lon","lat","apiCall2","res","arr","hourly","forEach","data","push","undefined","this","href","fontWeight","getFullYear","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f03cbc4.chunk.js","sourcesContent":["\r\nfunction HourlyForcast(props) {\r\n\r\n    return (\r\n        props.Info ? props.Info.map((item, index) => {\r\n            var date = new Date(item.dt * 1000);\r\n            return (\r\n                <div className=\"next-week\" key={index}>\r\n                    <div>\r\n                        <p>{date.getMonth()+1}.{date.getDate()}</p>\r\n                        <p>{date.getHours()}:{date.getMinutes()}0</p>\r\n                    </div>\r\n                    <img className=\"icon-cloud\" src={\"https://openweathermap.org/img/wn/\"+item.weather[0].icon+\"@2x.png\"} alt=\"pic\" />\r\n                    <p>{parseInt(item.temp)}°</p>\r\n                </div>\r\n            );\r\n        }) : <div>Not Found</div>\r\n    );\r\n}\r\nexport default HourlyForcast;","const MoreInfo = (props) => {\r\n    const {wind, sys, main, timezone} = props;\r\n    var sunrise, sunset;\r\n    \r\n    if (sys) {\r\n        // Convert UTC timestamps to local time in the specified time zone\r\n        const options = {\r\n            timeZone: timezone, // Replace with the actual time zone of the city\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            second: 'numeric',\r\n            hour12: false,\r\n        };\r\n    \r\n         sunrise = new Date(sys.sunrise * 1000).toLocaleTimeString(sys.country, options);\r\n         sunset = new Date(sys.sunset * 1000).toLocaleTimeString(sys.country, options);\r\n    }\r\n\r\n    return (\r\n        <div className=\"moreInf\">\r\n            <div className=\"col\">\r\n                <div className=\"cell\">\r\n                    <p>{main ? main.pressure : 0}pa</p>\r\n                    <p>Pressure</p>\r\n                </div>\r\n                <div className=\"cell\">\r\n                    <p>{wind ? wind.speed : 0}mph</p>\r\n                    <p>Wind</p>\r\n                </div>\r\n                <div className=\"cell\">\r\n                    <p>{sunrise ? sunrise.substring(0,sunrise.length-3) : \"00:00\"}</p>\r\n                    <p>Sunrise</p>\r\n                </div>\r\n                </div>\r\n                <div className=\"col\">\r\n                <div className=\"cell\">\r\n                    <p>{main ?  parseInt(main.feels_like) : 0}°</p>\r\n                    <p>feels like</p>\r\n                </div>\r\n                <div className=\"cell\">\r\n                    <p>{main ?  main.humidity : 0}%</p>\r\n                    <p>Humidity</p>\r\n                </div>\r\n                <div className=\"cell\">\r\n                    <p>{sunset ? sunset.substring(0,sunset.length-3) : \"00:00\"}</p>\r\n                    <p>Sunset</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default MoreInfo;","import HourlyForcast from \"./HourlyForcast\"\r\nimport MoreInfo from \"./MoreInfo\"\r\n\r\n\r\nconst d = new Date();\r\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\nconst Section = (props) => {\r\n    const {cityCountry, icon, temp, description, Info} = props;\r\n    const iconPic = `https://openweathermap.org/img/wn/${icon}@4x.png`;\r\n    return (\r\n        <section className=\"blur page\">\r\n            <div className=\"info\">\r\n                <h1 className=\"city\">{cityCountry}</h1>\r\n                <p className=\"date\">{days[d.getDay()] +\" \"+ d.getDate() +\" \"+ months[d.getMonth()]}</p>\r\n            </div>\r\n            <div className=\"forcast\">\r\n                <div className=\"tempeture-block\">\r\n                    <img className=\"cloud\" src={iconPic} alt=\"\" />\r\n                    <div>\r\n                        <h1 className=\"temp\">{Math.floor(temp)}°</h1>\r\n                        <p className=\"description\">{description}</p>\r\n                    </div>\r\n                </div>\r\n                <MoreInfo \r\n                    main={props.main}\r\n                    sys={props.sys}\r\n                    wind={props.wind}\r\n                    coords={props.coord}\r\n                    timezone={props.timezone}\r\n                />\r\n            </div>\r\n            <h1 style={{ paddingLeft: \"1em\"  }}>Forecast</h1>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <HourlyForcast Info={Info} />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n \r\nexport default Section;\r\n","export default __webpack_public_path__ + \"static/media/searchIcon.715159a9.svg\";","import logo from './searchIcon.svg';\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <div>\r\n            {props.error ? Error() : null }\r\n            <form className=\"search-box\" onSubmit={props.loadWeather}>\r\n                <button className=\"search-btn\" type=\"submit\" >\r\n                <img src={logo} style={{ width : \"25px\" }} alt=\"logo\" />\r\n                </button>\r\n                <input type=\"text\" placeholder=\"City\" name=\"city\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div className=\"error\">\r\n            <h2>\r\n                Please enter a valid City\r\n            </h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport Section from './WeatherComponent';\r\nimport Form from './Form';\r\n\r\nconst URI = \"https://api.openweathermap.org/data/2.5/\";\r\nconst PARAMS = {\r\n  weather: \"weather?q=\",\r\n  exclude: \"&exclude=hourly\",\r\n  unit: \"&units=metric\",\r\n  onecall: \"onecall?\",\r\n  lat: \"lat=\",\r\n  lon: \"&lon=\",\r\n  id: \"&appid=\"\r\n};\r\nconst API_KEY = PARAMS.id + process.env.REACT_APP_API_KEY;\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      cityCountry: \"\",\r\n      icon: undefined,\r\n      main: undefined,\r\n      temp: null,\r\n      temp_max: null,\r\n      temp_min: null,\r\n      sys: undefined,\r\n      wind: undefined,\r\n      coords: undefined,\r\n      hourly: undefined,\r\n      description: \"\",\r\n      timezone: undefined,\r\n      error: false\r\n    };\r\n  }\r\n\r\n  getWeather = async (e) => {\r\n\r\n    e.preventDefault();\r\n    e.target.style.animation = \"search-animation 1s ease-in-out forwards\";\r\n\r\n    const city = e.target.elements.city.value;\r\n    if (city) {\r\n      const apiCall = await fetch(URI + PARAMS.weather + city + PARAMS.unit + API_KEY);\r\n\r\n      const response = await apiCall.json();\r\n\r\n      const sec = document.querySelector('section');\r\n\r\n      if (response.cod === 200) {\r\n        if (sec.classList.contains('blur')) {\r\n          sec.classList.remove('blur');\r\n        }\r\n        sec.classList.add('fade_in');\r\n        console.log(response);\r\n        this.setState({\r\n          cityCountry: `${response.name}, ${response.sys.country}`,\r\n          main: response.main,\r\n          icon: response.weather[0].icon,\r\n          temp: response.main.temp,\r\n          temp_max: response.main.temp_max,\r\n          temp_min: response.main.temp_min,\r\n          description: response.weather[0].description,\r\n          sys: response.sys,\r\n          wind: response.wind,\r\n          coords: response.coord,\r\n          error: false\r\n        });\r\n      }\r\n      else {\r\n        sec.classList.add('blur');\r\n        sec.classList.remove('fade_in');\r\n\r\n        this.setState({\r\n          error: true\r\n        });\r\n      }\r\n      if (this.state.coords) {\r\n        const { lon, lat } = this.state.coords;\r\n        const apiCall2 = await fetch(URI + PARAMS.onecall + PARAMS.lat + lat + PARAMS.lon + lon + PARAMS.unit + API_KEY);\r\n\r\n        const res = await apiCall2.json();\r\n        console.log(res.timezone);\r\n        let arr = [];\r\n\r\n        res.hourly.forEach(data => {\r\n          arr.push(data);\r\n        });\r\n\r\n        this.setState({\r\n          hourly: arr,\r\n        })\r\n\r\n        this.setState({\r\n          timezone: res.timezone,\r\n        })\r\n      }\r\n\r\n    }\r\n    else {\r\n      document.querySelector('section').classList.add('blur');\r\n      this.setState({\r\n        error: true\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"title\">weathering me</div>\r\n        <Form loadWeather={this.getWeather} error={this.state.error} />\r\n        <Section\r\n          cityCountry={this.state.cityCountry}\r\n          icon={this.state.icon}\r\n          temp={this.state.temp}\r\n          temp_max={this.state.temp_max}\r\n          temp_min={this.state.temp_min}\r\n          description={this.state.description}\r\n          main={this.state.main}\r\n          sys={this.state.sys}\r\n          timezone={this.state.timezone}\r\n          wind={this.state.wind}\r\n          coords={this.state.coords}\r\n          Info={this.state.hourly}\r\n        />\r\n        <div className=\"copy-right\">Copyright &copy;&nbsp;<a href='https://me.swayli.tech' target='_' style={{ fontWeight: \"bold\" }}>Swayli.tech</a>&nbsp;{new Date().getFullYear()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}
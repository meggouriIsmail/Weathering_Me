{"version":3,"sources":["HourlyForcast.js","MoreInfo.js","WeatherComponent.js","searchIcon.svg","Form.js","App.js","index.js"],"names":["HourlyForcast","props","Info","map","item","index","date","Date","dt","className","getMonth","getDate","getHours","getMinutes","src","weather","icon","alt","parseInt","temp","MoreInfo","sunrise","sunset","wind","sys","main","pressure","speed","feels_like","humidity","d","months","days","Section","cityCountry","description","iconPic","getDay","Math","floor","coords","coord","style","paddingLeft","Error","Form","error","onSubmit","loadWeather","type","logo","placeholder","name","URI","PARAMS","API_KEY","process","App","getWeather","e","a","preventDefault","target","animation","city","elements","value","fetch","apiCall","json","response","sec","document","querySelector","cod","classList","contains","remove","add","setState","country","temp_max","temp_min","state","lon","lat","apiCall2","res","arr","hourly","forEach","data","push","undefined","this","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d9a69f84.chunk.js","sourcesContent":["\r\nfunction HourlyForcast(props) {\r\n\r\n    return (\r\n        props.Info ? props.Info.map((item, index) => {\r\n            var date = new Date(item.dt * 1000);\r\n            return (\r\n                <div className=\"next-week\" key={index}>\r\n                    <div>\r\n                        <p>{date.getMonth()+1}.{date.getDate()}</p>\r\n                        <p>{date.getHours()}:{date.getMinutes()}0</p>\r\n                    </div>\r\n                    <img className=\"icon-cloud\" src={\"http://openweathermap.org/img/wn/\"+item.weather[0].icon+\"@2x.png\"} alt=\"pic\" />\r\n                    <p>{parseInt(item.temp)}°</p>\r\n                </div>\r\n            );\r\n        }) : <div>Not Found</div>\r\n    );\r\n}\r\nexport default HourlyForcast;","const MoreInfo = (props) => {\r\n    const {wind, sys, main} = props;\r\n    var sunrise, sunset;\r\n\r\n    if(sys){\r\n        sunrise = new Date((sys.sunrise) * 1000);\r\n        sunset = new Date(sys.sunset * 1000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"moreInf\">\r\n            <div className=\"col\">\r\n                <div className=\"cell\">\r\n                    <p>{main ? main.pressure : 0}pa</p>\r\n                    <p>Pressure</p>\r\n                </div>\r\n                <div className=\"cell\">\r\n                    <p>{wind ? wind.speed : 0}mph</p>\r\n                    <p>Wind</p>\r\n                </div>\r\n                <div className=\"cell\">\r\n                    <p>{sunrise ? sunrise.getHours() : 0}:{sunrise ? sunrise.getMinutes() : 0}</p>\r\n                    <p>Sunrise</p>\r\n                </div>\r\n                </div>\r\n                <div className=\"col\">\r\n                <div className=\"cell\">\r\n                    <p>{main ?  parseInt(main.feels_like) : 0}°</p>\r\n                    <p>feels like</p>\r\n                </div>\r\n                <div className=\"cell\">\r\n                    <p>{main ?  main.humidity : 0}%</p>\r\n                    <p>Humidity</p>\r\n                </div>\r\n                <div className=\"cell\">\r\n                    <p>{sunset ? sunset.getHours() : 0}:{sunset ? sunset.getMinutes() : 0}</p>\r\n                    <p>Sunset</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default MoreInfo;","import HourlyForcast from \"./HourlyForcast\"\r\nimport MoreInfo from \"./MoreInfo\"\r\n\r\n\r\nconst d = new Date();\r\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\nconst Section = (props) => {\r\n    const {cityCountry, icon, temp, description, Info} = props;\r\n    const iconPic = `http://openweathermap.org/img/wn/${icon}@4x.png`;\r\n    return (\r\n        <section className=\"blur\">\r\n            <div className=\"title\">WEATHERING ME APP</div>\r\n            <div className=\"info\">\r\n                <h1 className=\"city\">{cityCountry}</h1>\r\n                <p className=\"date\">{days[d.getDay()] +\" \"+ d.getDate() +\" \"+ months[d.getMonth()]}</p>\r\n            </div>\r\n            <div className=\"forcast\">\r\n                <div className=\"tempeture-block\">\r\n                    <img className=\"cloud\" src={iconPic} alt=\"\" />\r\n                    <div>\r\n                        <h1 className=\"temp\">{Math.floor(temp)}</h1>\r\n                        <p className=\"description\">{description}</p>\r\n                    </div>\r\n                </div>\r\n                <MoreInfo \r\n                    main={props.main}\r\n                    sys={props.sys}\r\n                    wind={props.wind}\r\n                    coords={props.coord}\r\n                />\r\n            </div>\r\n            <h1 style={{ paddingLeft: \"1em\"  }}>Forecast</h1>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <HourlyForcast Info={Info} />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n \r\nexport default Section;\r\n","export default __webpack_public_path__ + \"static/media/searchIcon.715159a9.svg\";","import logo from './searchIcon.svg';\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <div>\r\n            {props.error ? Error() : null }\r\n            <form className=\"search-box\" onSubmit={props.loadWeather}>\r\n                <button className=\"search-btn\" type=\"submit\" >\r\n                <img src={logo} alt=\"logo\" />\r\n                </button>\r\n                <input type=\"text\" placeholder=\"city\" name=\"city\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div className=\"error\">\r\n            <h2>\r\n                Please enter a valid City\r\n            </h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\nimport Section from './WeatherComponent';\nimport Form from './Form';\n\nconst URI = \"https://api.openweathermap.org/data/2.5/\";\nconst PARAMS = {\n  weather: \"weather?q=\",\n  exclude: \"&exclude=hourly\",\n  unit   : \"&units=metric\",\n  onecall: \"onecall?\",\n  lat    : \"lat=\",\n  lon    : \"&lon=\",\n  id     : \"&appid=\"\n};\nconst API_KEY = PARAMS.id + process.env.REACT_APP_API_KEY;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cityCountry: \"\",\n      icon: undefined,\n      main: undefined,\n      temp: null,\n      temp_max: null,\n      temp_min: null,\n      sys: undefined,\n      wind: undefined,\n      coords: undefined,\n      hourly: undefined,\n      description: \"\",\n      error:false\n    };\n  }\n  \n  getWeather = async (e) => {\n    \n    e.preventDefault();\n    e.target.style.animation = \"search-animation 1s ease-in-out forwards\";\n    \n    const city = e.target.elements.city.value;\n    if(city){\n      const apiCall = await fetch(URI + PARAMS.weather + city + PARAMS.unit + API_KEY);\n      \n      const response = await apiCall.json();\n\n      const sec = document.querySelector('section');\n    \n      if(response.cod===200){\n        \n        if(sec.classList.contains('blur')){\n          sec.classList.remove('blur');\n        }\n        sec.classList.add('fade_in');\n\n        this.setState({\n          cityCountry: `${response.name}, ${response.sys.country}`,\n          main: response.main,\n          icon: response.weather[0].icon,\n          temp: response.main.temp,\n          temp_max: response.main.temp_max,\n          temp_min: response.main.temp_min,\n          description: response.weather[0].description,\n          sys: response.sys,\n          wind: response.wind,\n          coords: response.coord,\n          error: false\n        });  \n      }\n      else {\n        sec.classList.add('blur');\n        sec.classList.remove('fade_in');\n\n        this.setState({\n          error: true\n        });  \n      }\n      if(this.state.coords){\n        const {lon, lat} = this.state.coords;\n        const apiCall2 = await fetch(URI + PARAMS.onecall + PARAMS.lat + lat + PARAMS.lon + lon + PARAMS.unit + API_KEY);\n\n        const res = await apiCall2.json();\n        \n        let arr = [];\n        \n        res.hourly.forEach(data => {\n          arr.push(data);\n        });\n\n        this.setState({\n          hourly: arr,  \n        })\n      }\n\n    }\n    else {\n      document.querySelector('section').classList.add('blur');\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  render() { \n    return (\n      <div className=\"app\">\n        <Form loadWeather={this.getWeather} error={this.state.error} />\n        <Section \n          cityCountry={this.state.cityCountry}\n          icon={this.state.icon}\n          temp={this.state.temp}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n          main={this.state.main}\n          sys={this.state.sys}\n          wind={this.state.wind}\n          coords={this.state.coords}\n          Info={this.state.hourly}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}